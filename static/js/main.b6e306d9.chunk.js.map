{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/EmojiValue/EmojiValue.js","components/Pagination/Pagination.js","containers/Emoji.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","role","aria-label","Search","type","onChange","event","inputChangeHandler","placeholder","EmojiValue","emojiValue","emojiData","length","map","data","index","key","onClick","navigator","clipboard","writeText","symbol","id","title","Pagination","paginatePreviousData","aria-hidden","pageNumber","number","limit","paginateData","paginateNextData","Emoji","state","inputSearchValue","updatedEmojiData","pageNumberArray","skip","showPagination","_this","filter","item","toLowerCase","search","target","value","setState","Object","objectSpread","emoji","EmojiList","slice","emojiLength","JSON","parse","stringify","this","i","push","_this2","components_Header_Header","components_Search_Search","components_EmojiValue_EmojiValue","components_Pagination_Pagination","Component","App","src_containers_Emoji","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6e306d9.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            <p className=\"header-text\" >\n                <span role=\"img\" aria-label=\"Smiley\">ðŸ˜€</span>\n                <span> Emoji Search </span>\n                <span role=\"img\" aria-label=\"Smiley\">ðŸ˜‚</span>\n            </p>\n        </div>\n    )\n};\n\nexport default Header;","import React from 'react';\n\nconst Search = (props) => {\n    return (\n        <div className=\"Emoji-page-wrapper\">\n            <form className=\"form col-md-12\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={(event) => props.inputChangeHandler(event)}\n                    placeholder=\"Search Emoji\"\n                />\n            </form>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport './EmojiValue.css';\n\nconst EmojiValue = (props) => {\n\tconst emojiValue = (\n\t\tprops.emojiData.length > 0 && props.emojiData.map((data, index) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"emoji-value row p-2\" key={index} onClick={() => navigator.clipboard.writeText(data.symbol)}>\n\t\t\t\t\t<h5 className=\"symbol\" id=\"symobol\">{data.symbol}</h5>&nbsp;\n                    <h5 className=\"p-1\">{data.title}</h5>\n\t\t\t\t\t<span className=\"tooltiptext\">Click to copy emoji</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t)\n\treturn (\n\t\t<div className=\"Emoji-list-wrapper col-md-12\">\n\t\t\t<div className=\"emoji-list col-md-12\">\n\t\t\t\t{emojiValue}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default EmojiValue;","import React from 'react';\nimport './Pagination.css';\n\nconst Pagination = (props) => {\n    return (\n        <div className=\"pagination-wrapper\">\n            <ul className=\"pagination\">\n                <li className=\"page-item\">\n                    <button className=\"page-link\" aria-label=\"Previous\" onClick={() => props.paginatePreviousData()}>\n                        <span aria-hidden=\"true\">&laquo;</span>\n                        <span className=\"sr-only\">Previous</span>\n                    </button>\n                </li>\n                {\n                    props.pageNumber.length > 0 && props.pageNumber.map(number => {\n                        return (\n                            <li\n                                className={(props.limit / 10) === number ? \"page-item active\" : \"page-item\"}\n                                key={number}\n                                onClick={() => props.paginateData(number)}>\n                                <button className=\"page-link\">{number}</button>\n                            </li>\n                        );\n                    })\n                }\n                <li className=\"page-item\">\n                    <button className=\"page-link\" aria-label=\"Next\" onClick={() => props.paginateNextData()}>\n                        <span aria-hidden=\"true\">&raquo;</span>\n                        <span className=\"sr-only\">Next</span>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport EmojiList from '../emojiData.json';\nimport Header from '../components/Header/Header';\nimport Search from '../components/Search/Search';\nimport EmojiValue from '../components/EmojiValue/EmojiValue';\nimport Pagination from '../components/Pagination/Pagination';\nimport './Emoji.css';\n\nclass Emoji extends Component {\n\n\tstate = {\n\t\temojiData: [],\n\t\tinputSearchValue: '',\n\t\tupdatedEmojiData: [],\n\t\tpageNumberArray: [],\n\t\tlimit: 10,\n\t\tskip: 0,\n\t\tshowPagination: true,\n\t\tpageNumber: 1\n\t};\n\n\tcomponentDidMount() {\n\t\tconst emoji = EmojiList.slice(0, 50);\n\t\tconst emojiLength = emoji.length / 10;\n\t\tlet pageNumberArray = JSON.parse(JSON.stringify(this.state.pageNumberArray));\n\n\t\tfor (let i = 1; i <= emojiLength; i++) {\n\t\t\tpageNumberArray.push(i)\n\t\t}\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tpageNumberArray,\n\t\t\temojiData: emoji\n\t\t});\n\t};\n\n\tinputChangeHandler = (event) => {\n\t\tlet updatedEmojiData = this.state.emojiData.filter((item) => {\n\t\t\treturn item.title.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n\t\t});\n\t\tlet showPagination = false;\n\t\tif (event.target.value === '' && updatedEmojiData.length > 0) {\n\t\t\tupdatedEmojiData = [];\n\t\t\tshowPagination = true\n\t\t}\n\t\tif (event.target.value !== '' && updatedEmojiData.length === 0) {\n\t\t\tshowPagination = false;\n\t\t}\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tinputSearchValue: event.target.value,\n\t\t\tupdatedEmojiData,\n\t\t\tshowPagination\n\t\t});\n\t};\n\n\tpaginateData = (number) => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tskip: ((number * 10) - 10),\n\t\t\tlimit: number * 10,\n\t\t\tpageNumber: number\n\t\t})\n\t}\n\n\tpaginatePreviousData = () => {\n\t\tlet number = this.state.pageNumber;\n\t\tif (this.state.pageNumber > 1) {\n\t\t\tnumber = this.state.pageNumber - 1;\n\t\t}\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tskip: ((number * 10) - 10),\n\t\t\tlimit: number * 10,\n\t\t\tpageNumber: number\n\t\t})\n\t}\n\n\tpaginateNextData = () => {\n\t\tlet number = this.state.pageNumber;\n\t\tif (this.state.pageNumber < 5) {\n\t\t\tnumber = this.state.pageNumber + 1;\n\t\t}\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tskip: ((number * 10) - 10),\n\t\t\tlimit: number * 10,\n\t\t\tpageNumber: number\n\t\t})\n\t}\n\n\trender() {\n\t\t// console.log(this.state.showPagination);\n\t\treturn (\n\t\t\t<div className=\"Emoji-page-wrapper\">\n\t\t\t\t<Header />\n\t\t\t\t<Search inputChangeHandler={(event) => this.inputChangeHandler(event)} /><br />\n\t\t\t\t<EmojiValue\n\t\t\t\t\temojiData={this.state.inputSearchValue === '' ? this.state.emojiData.slice(this.state.skip, this.state.limit) : this.state.updatedEmojiData}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tthis.state.showPagination &&\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tpageNumber={this.state.pageNumberArray}\n\t\t\t\t\t\tpaginateData={(number) => { this.paginateData(number) }}\n\t\t\t\t\t\tlimit={this.state.limit}\n\t\t\t\t\t\tpaginatePreviousData={() => this.paginatePreviousData()}\n\t\t\t\t\t\tpaginateNextData={() => this.paginateNextData()}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.state.inputSearchValue !== '' && this.state.updatedEmojiData.length === 0 && <h4>Emoji Not Found !!</h4>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default Emoji;","import React, { Component } from 'react';\nimport './App.css';\nimport Emoji from './containers/Emoji';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Emoji />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}